plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
}

repositories {
    mavenCentral()
}


def restAssuredVersion = "5.3.1",
    allureVersion = "2.21.0"


allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation (
            "com.codeborne:selenide:6.19.1",
            'org.junit.jupiter:junit-jupiter:5.10.1',
            "com.github.javafaker:javafaker:1.0.2",
            'org.assertj:assertj-core:3.24.2',
            'commons-io:commons-io:2.15.0',
            'com.codeborne:pdf-test:1.5.0',
            'com.codeborne:xls-test:1.4.3',
            'com.opencsv:opencsv:5.9',
            'com.fasterxml.jackson.core:jackson-core:2.13.1',
            'com.fasterxml.jackson.core:jackson-databind:2.14.1',
            'io.qameta.allure:allure-selenide:2.24.0',
            'org.aeonbits.owner:owner:1.0.4',
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion"
    )
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.8.1')
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task demoqa_test(type: Test) {
    useJUnitPlatform {
        includeTags("DemoQa")
    }
}

task testik_test(type: Test) {
    useJUnitPlatform {
        includeTags("testik")
    }
}